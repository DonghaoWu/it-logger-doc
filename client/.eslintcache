[{"/Users/donghao/coding1127/All-Projects/MERN-projects/doc/it-logger-doc/client/src/index.js":"1","/Users/donghao/coding1127/All-Projects/MERN-projects/doc/it-logger-doc/client/src/App.js":"2","/Users/donghao/coding1127/All-Projects/MERN-projects/doc/it-logger-doc/client/src/components/layout/SearchBar.js":"3","/Users/donghao/coding1127/All-Projects/MERN-projects/doc/it-logger-doc/client/src/components/logs/Logs.js":"4","/Users/donghao/coding1127/All-Projects/MERN-projects/doc/it-logger-doc/client/src/components/logs/LogItem.js":"5","/Users/donghao/coding1127/All-Projects/MERN-projects/doc/it-logger-doc/client/src/components/layout/PreLoader.js":"6","/Users/donghao/coding1127/All-Projects/MERN-projects/doc/it-logger-doc/client/src/components/layout/AddBtn.js":"7","/Users/donghao/coding1127/All-Projects/MERN-projects/doc/it-logger-doc/client/src/components/logs/AddLogModal.js":"8","/Users/donghao/coding1127/All-Projects/MERN-projects/doc/it-logger-doc/client/src/components/logs/EditLogModal.js":"9","/Users/donghao/coding1127/All-Projects/MERN-projects/doc/it-logger-doc/client/src/components/techs/AddTechModal.js":"10","/Users/donghao/coding1127/All-Projects/MERN-projects/doc/it-logger-doc/client/src/components/techs/TechListModal.js":"11","/Users/donghao/coding1127/All-Projects/MERN-projects/doc/it-logger-doc/client/src/components/techs/TechItem.js":"12","/Users/donghao/coding1127/All-Projects/MERN-projects/doc/it-logger-doc/client/src/store.js":"13","/Users/donghao/coding1127/All-Projects/MERN-projects/doc/it-logger-doc/client/src/reducers/index.js":"14","/Users/donghao/coding1127/All-Projects/MERN-projects/doc/it-logger-doc/client/src/reducers/logReducer.js":"15","/Users/donghao/coding1127/All-Projects/MERN-projects/doc/it-logger-doc/client/src/actions/types.js":"16","/Users/donghao/coding1127/All-Projects/MERN-projects/doc/it-logger-doc/client/src/actions/logActions.js":"17"},{"size":220,"mtime":1608421256139,"results":"18","hashOfConfig":"19"},{"size":1046,"mtime":1608592042000,"results":"20","hashOfConfig":"19"},{"size":613,"mtime":1608506693307,"results":"21","hashOfConfig":"19"},{"size":1308,"mtime":1608594276057,"results":"22","hashOfConfig":"19"},{"size":975,"mtime":1608504181000,"results":"23","hashOfConfig":"19"},{"size":222,"mtime":1608506150935,"results":"24","hashOfConfig":"19"},{"size":832,"mtime":1608505441918,"results":"25","hashOfConfig":"19"},{"size":2653,"mtime":1608509796000,"results":"26","hashOfConfig":"19"},{"size":2523,"mtime":1608509391077,"results":"27","hashOfConfig":"19"},{"size":1980,"mtime":1608509766560,"results":"28","hashOfConfig":"19"},{"size":942,"mtime":1608502586000,"results":"29","hashOfConfig":"19"},{"size":500,"mtime":1608504069000,"results":"30","hashOfConfig":"19"},{"size":381,"mtime":1608592244160,"results":"31","hashOfConfig":"19"},{"size":137,"mtime":1608592403661,"results":"32","hashOfConfig":"19"},{"size":734,"mtime":1608594326884,"results":"33","hashOfConfig":"19"},{"size":559,"mtime":1608592485306,"results":"34","hashOfConfig":"19"},{"size":553,"mtime":1608593891267,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1subrzp",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/donghao/coding1127/All-Projects/MERN-projects/doc/it-logger-doc/client/src/index.js",[],["76","77"],"/Users/donghao/coding1127/All-Projects/MERN-projects/doc/it-logger-doc/client/src/App.js",[],"/Users/donghao/coding1127/All-Projects/MERN-projects/doc/it-logger-doc/client/src/components/layout/SearchBar.js",[],"/Users/donghao/coding1127/All-Projects/MERN-projects/doc/it-logger-doc/client/src/components/logs/Logs.js",[],"/Users/donghao/coding1127/All-Projects/MERN-projects/doc/it-logger-doc/client/src/components/logs/LogItem.js",["78"],"import React from 'react';\nimport Moment from 'react-moment';\nimport PropTypes from 'prop-types';\n\nconst LogItem = ({ log }) => {\n\n    return (\n        <li className=\"collection-item\">\n            <div>\n                <a href='#edit-log-modal' className={`modal-trigger ${log.attention ? 'red-text' : 'blue-text'}`}>\n                    {log.message}\n                </a>\n                <br />\n                <span className='grey-text'>\n                    <span className=\"black-text\">ID #{log.tech}</span> last updated by John Doe\n                    <span className=\"black-text\">{log.tech}</span> on{' '} <Moment format=\"MMMM Do YYYY, h:mm:ss a\">{log.date}</Moment>\n                </span>\n                <a href=\"#\" className=\"secondary-content\">\n                    <i className=\"material-icons grey-text\">delete</i>\n                </a>\n            </div>\n        </li>\n    )\n}\n\nLogItem.propTypes = {\n    log: PropTypes.object.isRequired\n}\n\nexport default LogItem;","/Users/donghao/coding1127/All-Projects/MERN-projects/doc/it-logger-doc/client/src/components/layout/PreLoader.js",[],"/Users/donghao/coding1127/All-Projects/MERN-projects/doc/it-logger-doc/client/src/components/layout/AddBtn.js",[],"/Users/donghao/coding1127/All-Projects/MERN-projects/doc/it-logger-doc/client/src/components/logs/AddLogModal.js",["79"],"import React, { useState } from 'react';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nconst AddLogModal = () => {\n\n    const [message, setMessage] = useState('');\n    const [attention, setAttention] = useState(false);\n    const [tech, setTech] = useState('');\n\n    const onSubmit = () => {\n        if (message === '' || tech === '') {\n            M.toast({ html: 'Please enter a message and tech.' })\n        }\n        else {\n            console.log(message, attention, tech);\n            setMessage('');\n            setAttention(false);\n            setTech('');\n        }\n    }\n\n    return (\n        <div id=\"add-log-modal\" className=\"modal\" style={modalStyle} >\n            <div className=\"modal-content\">\n                <h4> Enter System Log</h4>\n                <div className='row'>\n                    <div className=\"input-field\">\n                        <input type='text' name=\"message\" value={message} placeholder='Log Message' onChange={e => setMessage(e.target.value)} />\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className=\"input-field\">\n                        <select name=\"tech\" value={tech} className='browser-default' onChange={e => setTech(e.target.value)}>\n                            <option value='' disabled>Select Techician</option>\n                            <option value='John Doe'>John Doe</option>\n                            <option value='Sam Smith'>Sam Smith</option>\n                            <option value='Marry Jenifer'>Marry Jenifer</option>\n                        </select>\n                    </div>\n                </div>\n\n                <div className='row'>\n                    <div className=\"input-field\">\n                        <p>\n                            <label>\n                                <input\n                                    type=\"checkbox\"\n                                    className=\"filled-in\"\n                                    checked={attention}\n                                    value={attention}\n                                    onChange={e => setAttention(!attention)}\n                                />\n                                <span>Needs Attention</span>\n                            </label>\n                        </p>\n                    </div>\n                </div>\n\n            </div>\n\n\n            <div className='modal-footer'>\n                <a href='#' onClick={onSubmit} className='modal-close waves-effect btn blue'>Enter</a>\n            </div>\n        </div>\n    )\n}\n\nconst modalStyle = {\n    width: '75%',\n    height: '75%'\n}\n\nexport default AddLogModal;","/Users/donghao/coding1127/All-Projects/MERN-projects/doc/it-logger-doc/client/src/components/logs/EditLogModal.js",["80"],"import React, { useState } from 'react';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nconst EditLogModal = () => {\n\n    const [message, setMessage] = useState('');\n    const [attention, setAttention] = useState(false);\n    const [tech, setTech] = useState('');\n\n    const onSubmit = () => {\n        if (message === '' || tech === '') {\n            M.toast({ html: 'Please enter a message and tech.' })\n        }\n        else {\n            console.log(message, attention, tech);\n            setMessage('');\n            setAttention(false);\n            setTech('');\n        }\n    }\n\n    return (\n        <div id=\"edit-log-modal\" className=\"modal\" style={modalStyle} >\n            <div className=\"modal-content\">\n                <h4> Edit System Log</h4>\n                <div className='row'>\n                    <div className=\"input-field\">\n                        <input type='text' name=\"message\" value={message} placeholder='current log' onChange={e => setMessage(e.target.value)} />\n                    </div>\n                </div>\n                <div className='row'>\n                    <div className=\"input-field\">\n                        <select name=\"tech\" value={tech} className='browser-default' onChange={e => setTech(e.target.value)}>\n\n                            <option value='' disabled>Select Techician</option>\n                            <option value='John Doe'>John Doe</option>\n                            <option value='Sam Smith'>Sam Smith</option>\n                            <option value='Marry Jenifer'>Marry Jenifer</option>\n                        </select>\n                    </div>\n                </div>\n\n                <div className='row'>\n                    <div className=\"input-field\">\n                        <p>\n                            <label>\n                                <input type='checkbox' className='filled-in' checked={attention} value={attention}\n                                    onChange={e => setAttention(!attention)}\n                                />\n                                <span>Needs Attention</span>\n                            </label>\n                        </p>\n                    </div>\n                </div>\n            </div>\n\n\n            <div className='modal-footer'>\n                <a href='#' onClick={onSubmit} className='modal-close waves-effect waves-green btn blue'>Enter</a>\n            </div>\n        </div>\n    )\n}\n\nconst modalStyle = {\n    width: '75%',\n    height: '75%'\n}\n\nexport default EditLogModal;","/Users/donghao/coding1127/All-Projects/MERN-projects/doc/it-logger-doc/client/src/components/techs/AddTechModal.js",["81"],"import React, { useState } from 'react';\nimport M from 'materialize-css/dist/js/materialize.min.js';\n\nconst AddTechModal = () => {\n\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n\n\n    const onSubmit = () => {\n        if (firstName === '' || lastName === '') {\n            M.toast({ html: 'Please enter the first and last name.' })\n        }\n        else {\n            console.log(firstName, lastName);\n            setFirstName('');\n            setLastName('');\n        }\n    }\n\n    return (\n        // ref to AddBtn.js\n        <div id=\"add-tech-modal\" className=\"modal\" >\n            <div className=\"modal-content\">\n                <h4> New Technician</h4>\n                <div className='row'>\n                    <div className=\"input-field\">\n                        <input type='text'\n                            name=\"firstName\"\n                            value={firstName}\n                            onChange={e => setFirstName(e.target.value)}\n                        />\n\n                        <label htmlFor=\"firstName\" className=\"active\">\n                            First Name\n                        </label>\n                    </div>\n                </div>\n\n                <div className='row'>\n                    <div className=\"input-field\">\n                        <input type='text'\n                            name=\"lastName\"\n                            value={lastName}\n                            onChange={e => setLastName(e.target.value)}\n                        />\n\n                        <label htmlFor=\"firstName\" className=\"active\">\n                            Last Name\n                        </label>\n                    </div>\n                </div>\n\n            </div>\n\n            <div className='modal-footer'>\n                <a href='#' onClick={onSubmit} className='modal-close waves-effect btn blue'>Enter</a>\n            </div>\n        </div>\n    )\n}\n\nexport default AddTechModal;","/Users/donghao/coding1127/All-Projects/MERN-projects/doc/it-logger-doc/client/src/components/techs/TechListModal.js",[],"/Users/donghao/coding1127/All-Projects/MERN-projects/doc/it-logger-doc/client/src/components/techs/TechItem.js",["82"],"import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TechItem = ({ tech }) => {\n\n    return (\n        <li className=\"collection-item\">\n            <div>\n                {tech.firstName} {tech.lastName}\n                <a href=\"#\" className=\"secondary-content\">\n                    <i className=\"material-icons grey-text\">delete</i>\n                </a>\n            </div>\n        </li>\n    )\n}\n\nTechItem.propTypes = {\n    tech: PropTypes.object.isRequired\n}\n\nexport default TechItem;","/Users/donghao/coding1127/All-Projects/MERN-projects/doc/it-logger-doc/client/src/store.js",[],"/Users/donghao/coding1127/All-Projects/MERN-projects/doc/it-logger-doc/client/src/reducers/index.js",[],"/Users/donghao/coding1127/All-Projects/MERN-projects/doc/it-logger-doc/client/src/reducers/logReducer.js",[],"/Users/donghao/coding1127/All-Projects/MERN-projects/doc/it-logger-doc/client/src/actions/types.js",[],"/Users/donghao/coding1127/All-Projects/MERN-projects/doc/it-logger-doc/client/src/actions/logActions.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":18,"column":17,"nodeType":"89","endLine":18,"endColumn":59},{"ruleId":"87","severity":1,"message":"88","line":63,"column":17,"nodeType":"89","endLine":63,"endColumn":94},{"ruleId":"87","severity":1,"message":"88","line":59,"column":17,"nodeType":"89","endLine":59,"endColumn":106},{"ruleId":"87","severity":1,"message":"88","line":57,"column":17,"nodeType":"89","endLine":57,"endColumn":94},{"ruleId":"87","severity":1,"message":"88","line":10,"column":17,"nodeType":"89","endLine":10,"endColumn":59},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]